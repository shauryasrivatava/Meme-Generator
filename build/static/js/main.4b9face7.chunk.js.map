{"version":3,"sources":["components/Template.jsx","components/Meme.jsx","App.js","index.js"],"names":["Template","templates","setMeme","className","map","template","onClick","style","backgroundImage","url","id","Meme","meme","useState","hidebtn","setHidebtn","template_id","username","password","boxes","form","setForm","src","alt","Array","box_count","_","index","type","placeholder","onChange","e","newbox","text","target","value","box","fetch","then","response","json","data","success","saveAs","name","copyImageToClipboard","console","log","catch","message","App","setTemplates","useEffect","memes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAoBeA,EApBE,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAC7B,OACE,qBAAKC,UAAU,YAAf,SACGF,EAAUG,KAAI,SAACC,GAAD,OACb,qBAEEF,UAAU,WACVG,QAAS,WACPJ,EAAQG,IAJZ,SAOE,qBACEE,MAAO,CAAEC,gBAAgB,OAAD,OAASH,EAASI,IAAlB,MACxBN,UAAU,WARPE,EAASK,U,+BC0ETC,EAzEF,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMV,EAAc,EAAdA,QACpB,EAA0BW,oBAAS,GAAnC,mBAAMC,EAAN,KAAcC,EAAd,KAEA,EAAqBF,mBAAS,CAC5BG,YAAYJ,EAAKF,GACjBO,SAAS,SACTC,SAAS,kBACTC,MAAM,KAJR,mBAAMC,EAAN,KAAWC,EAAX,KAsCA,OACE,sBAAKlB,UAAU,kBAAf,UACE,sBAAKA,UAAU,OAAf,UACE,uDACA,qBAAKmB,IAAKV,EAAKH,IAAKc,IAAI,QAGzB,YAAIC,MAAMZ,EAAKa,YAAYrB,KAAI,SAACsB,EAAGC,GAAJ,OAC9B,uBAAmBC,KAAK,OAAOC,YAAW,kBAAaF,EAAQ,GAAKG,SAAU,SAACC,GAC7E,IAAMC,EAAOZ,EAAKD,MAClBa,EAAOL,GAAO,CAACM,KAAMF,EAAEG,OAAOC,OAC9Bd,EAAQ,2BAAID,GAAL,IAAWD,MAAMa,OAHdL,MAOd,gCACE,wBAAQrB,QAhDC,WACb,IAAIG,EAAI,qDAAD,OAAsDW,EAAKJ,YAA3D,qBAAmFI,EAAKH,SAAxF,qBAA6GG,EAAKF,UACzHE,EAAKD,MAAMf,KAAI,SAACgC,EAAIT,GAAL,OACblB,GAAK,UAAF,OAAYkB,EAAZ,mBAA4BS,EAAIH,SAEnCI,MAAM5B,GACL6B,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UAExBF,MAAK,SAACG,IACa,IAAfA,EAAKC,UACNxC,EAAQ,2BAAIU,GAAL,IAAUH,IAAKgC,EAAKA,KAAKhC,OAChCM,GAAW,QAqCb,2BACA,wBACET,QAAS,WACPJ,EAAQ,OAFZ,0CAMAY,GACF,gCACA,wBAAQR,QA1CY,WACpBqC,iBAAO/B,EAAKH,IAAIG,EAAKgC,OAyCrB,sBACA,wBAAQtC,QAvCoB,WAE5BuC,YACEjC,EAAKH,KAEJ6B,MAAK,WACJQ,QAAQC,IAAI,mBAEbC,OAAM,SAACjB,GACNe,QAAQC,IAAI,UAAWhB,EAAEkB,aA8B7B,4CC9CSC,EAtBH,WACV,MAAkCrC,mBAAS,IAA3C,mBAAOZ,EAAP,KAAkBkD,EAAlB,KACA,EAAwBtC,mBAAS,MAAjC,mBAAOD,EAAP,KAAaV,EAAb,KASA,OARAkD,qBAAU,WACRf,MAAM,qCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLU,EAAaV,EAAKA,KAAKY,OACvBP,QAAQC,IAAIN,EAAKA,KAAKY,YAEzB,IAED,sBAAKlD,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,4BACU,OAATS,EACA,cAAC,EAAD,CAAUX,UAAWA,EAAWC,QAASA,IAE1C,cAAC,EAAD,CAAMU,KAAMA,EAAMV,QAASA,QClBjCoD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4b9face7.chunk.js","sourcesContent":["const Template = ({ templates, setMeme }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      {templates.map((template) => (\r\n        <div\r\n          key={template.id}\r\n          className=\"template\"\r\n          onClick={() => {\r\n            setMeme(template);\r\n          }}\r\n        >\r\n          <div\r\n            style={{ backgroundImage: `url(${template.url})` }}\r\n            className=\"image\"\r\n          ></div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Template;\r\n","import { copyImageToClipboard } from 'copy-image-clipboard';\r\nimport { saveAs } from 'file-saver';\r\nimport { useState } from \"react\";\r\n\r\n\r\n\r\nconst Meme = ({ meme, setMeme }) => {\r\n  const[hidebtn,setHidebtn]=useState(false)\r\n\r\n  const[form,setForm]= useState({\r\n    template_id:meme.id,\r\n    username:\"forLOL\",\r\n    password:\"LTfW@6rXy7wX6gQ\",\r\n    boxes:[],\r\n  });\r\n  const generate=()=>{\r\n    let url=`https://api.imgflip.com/caption_image?template_id=${form.template_id}&username=${form.username}&password=${form.password}`\r\n    form.boxes.map((box,index)=>(\r\n      url+=`&boxes[${index}][text]=${box.text}`\r\n      ))\r\n      fetch(url)\r\n      .then(response=>response.json())\r\n      \r\n      .then((data)=> {\r\n        if(data.success===true){\r\n          setMeme({...meme,url: data.data.url})\r\n          setHidebtn(true)\r\n        }\r\n      }); \r\n    };\r\n    const handleDownload =()=>{\r\n      saveAs(meme.url,meme.name);\r\n     \r\n    }\r\n    const handleImageToClipboard =()=>{\r\n      // saveAs(meme.url,meme.name);\r\n      copyImageToClipboard(\r\n        meme.url,\r\n      )\r\n        .then(() => {\r\n          console.log('Image Copied')\r\n        })\r\n        .catch((e) => {\r\n          console.log('Error: ', e.message)\r\n        })\r\n\r\n    }\r\n  return (\r\n    <div className=\"meme-conatainer\">\r\n      <div className=\"meme\">\r\n        <h3>MEME edit karlo frnds</h3>\r\n        <img src={meme.url} alt=\"\" />\r\n      </div>\r\n\r\n      {[...Array(meme.box_count)].map((_, index) => (\r\n        <input key={index} type=\"text\" placeholder={`caption ${index + 1}`} onChange={(e)=>{\r\n          const newbox=form.boxes\r\n          newbox[index]={text: e.target.value};\r\n          setForm({...form, boxes:newbox})  \r\n          // form={target.value}\r\n        }}/>\r\n      ))}\r\n      <div>\r\n        <button onClick={generate}>Generate Meme</button>\r\n        <button\r\n          onClick={() => {\r\n            setMeme(null);\r\n          }}\r\n        >Return to Choose Template</button>\r\n      </div>\r\n      { hidebtn &&\r\n      <div>\r\n      <button onClick={handleDownload}>DOWNLOAD</button>\r\n      <button onClick={handleImageToClipboard}>Copy Image To Clipboard</button>\r\n      </div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Meme;\r\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Template from \"./components/Template\";\nimport Meme from \"./components/Meme\";\n\nconst App = () => {\n  const [templates, setTemplates] = useState([]);\n  const [meme, setMeme] = useState(null);\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\")\n      .then((response) => response.json())\n      .then((data) => {\n        setTemplates(data.data.memes);\n        console.log(data.data.memes);\n      });\n  }, []);\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Meme Generator</h1>\n      {meme === null ?\n       <Template templates={templates} setMeme={setMeme} \n      /> : \n      <Meme meme={meme} setMeme={setMeme}/>}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}